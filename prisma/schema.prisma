generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  image         String?
  wishlistIds   String[]  @db.ObjectId
  isAdmin       Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model serviceCategory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  imageSrc    String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model service {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  imageSrc    String
  category    String
  title       String   @unique
  description String
  price       Float
  discount    Float
  otherInfo   Json?
  type        String   @default("service")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model shopCategory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  imageSrc    String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model shop {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  imageSrc    String
  category    String
  title       String   @unique
  description String
  price       Float
  discount    Float
  otherInfo   Json?
  quantity    Int
  type        String   @default("shop")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  imageSrc   String
  name       String
  reviewText String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
